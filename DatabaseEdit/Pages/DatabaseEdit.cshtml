@page
@model DatabaseEdit.Pages.DatabaseEditModel
@using System.Data;
@{
}

<div>
    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="message">
            <button>x</button>
            @Html.Raw(Model.Message)
        </div>
    }
    @switch (Model.View)
    {
        case "row":
            {
                <div>
                    <h2>Table @Model.Table row @Model.Row <a href="?view=table&table=@Model.Table">back</a></h2>

                    <form method="post">
                        <table class="edit">

                            @{
                                var row = Model.Row == -1 ? Model.TableConfig.Data.NewRow() : Model.TableConfig.Data.Rows[Model.Row];
                            }
                            @for (int r = 0; r < Model.TableConfig.Config.Count(); r++)
                            {
                                var e = Model.TableConfig.Config.ElementAt(r);
                                <tr>
                                    <td><span title="@(e[6]) (@e[7])">@e[3]</span></td>
                                    @if (e[9].ToString() == "PRIMARY KEY" && Model.Row >= 0)
                                    {
                                        <td>
                                            <input type="hidden" name="@e[3]" value="@row.ItemArray[r]" />
                                            @row.ItemArray[r]
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            @if (Model.TableConfig.ForeignKeys.ContainsKey(r))
                                            {
                                                var table = Model.TableConfig.ForeignKeys[r];
                                                <select name="@e[3]">
                                                    <option value=""></option>
                                                    @foreach (DataRow val in table.Rows)
                                                    {
                                                        <option value="@(val["key"])" selected="@(val["key"].ToString() == row.ItemArray[r].ToString() )">@(val["value"]) (@val["key"])</option>
                                                    }
                                                </select>

                                            }
                                            else if (e[6].ToString().Contains("varchar") && int.TryParse(e[7].ToString(), out int fieldlength) && fieldlength == -1)
                                            {
                                                <textarea name="@e[3]">@row.ItemArray[r]</textarea>
                                            }
                                            else if (e[6].ToString() == "bit")
                                            {
                                                <label> true <input type="radio" name="@e[3]" value="True" checked="@(row.ItemArray[r].ToString() == "True")" /></label>
                                                <label> false <input type="radio" name="@e[3]" value="False" checked="@(row.ItemArray[r].ToString() == "False")" /></label>
                                            }
                                            else if (e[6].ToString() == "uniqueidentifier")
                                            {
                                                <input class="guid" type="text" name="@e[3]" value="@row.ItemArray[r]" /> <button type="button" onclick="newguid(event)">new guid</button>
                                            }
                                            @*doesnt really work yet....

                                                else if (e[6].ToString() == "datetime")
                                                {
                                                <input type="datetime-local" name="@e[3]" value="@row.ItemArray[r]" pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}" />
                                                }*@
                                            else if (e[6].ToString() == "int")
                                            {
                                                <input type="number" name="@e[3]" value="@row.ItemArray[r]" />
                                            }
                                            else
                                            {
                                                <input type="text" name="@e[3]" value="@row.ItemArray[r]" />
                                            }
                                        </td>
                                    }
                                </tr>
                            }
                        </table>
                        <button type="submit">Save</button>
                    </form>
                    @if (Model.Row >= 0)
                    {
                        <form method="post" asp-page-handler="Delete">
                            <input type="hidden" name="table" value="@Model.Table" />
                            <input type="hidden" name="row" value="@Model.Row" />
                            <button type="submit" onclick="confirm('are you surce?')">Delete</button>
                        </form>
                    }

                </div>
            }
            break;
        case "config":
            {
                <div>
                    <h2>Table @Model.Table <a href="?">back</a></h2>

                    <table>
                        <tr>
                            @for (int i = 0; i < Model.TableConfig.Config.ElementAt(0).ItemArray.Length; i++)
                            {
                                <td>@i</td>
                            }
                        </tr>
                        @foreach (DataRow row in Model.TableConfig.Config)
                        {
                            <tr>
                                @foreach (var item in row.ItemArray)
                                {
                                    <td>@item</td>
                                }
                            </tr>
                        }
                    </table>
                </div>
            }
            break;
        case "table":
            {
                <div>
                    <h2>Table @Model.Table <a href="?">back</a></h2>

                    <label>search<input id="search" type="text" oninput="searchTable(event)" /></label>
                    <a href="?view=row&table=@(Model.Table)&row=-1">new</a>

                    <table id="tablerows">

                        <thead>
                            <tr>
                                @foreach (DataColumn col in Model.TableConfig.Data.Columns)
                                {
                                    <th class="sort">@col.ColumnName</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @for (int r = 0; r < Model.TableConfig.Data.Rows.Count; r++)
                            {
                                var row = Model.TableConfig.Data.Rows[r];
                                <tr class="clickable" onclick="document.location = '?view=row&table=@(Model.Table)&row=@(r)'">
                                    @for (int i = 0; i < row.ItemArray.Length; i++)
                                    {
                                        var item = row.ItemArray[i];
                                        var config = Model.TableConfig.Config.ElementAt(i);
                                        if (Model.TableConfig.ForeignKeys.ContainsKey(i) && !string.IsNullOrEmpty(item.ToString()))
                                        {
                                            var table = Model.TableConfig.ForeignKeys[i];
                                            <td>
                                                @(table.Rows.Cast<DataRow>().First(r => r["key"].ToString() == item.ToString())["value"])
                                            </td>
                                        }
                                        else if (config.ItemArray[6].ToString() == "datetime" && item != DBNull.Value)
                                        {
                                            <td>@(((DateTime?)item)?.ToString("yyyy-MM-ddTHH:mm:ss"))</td>
                                        }
                                        else
                                        {
                                            <td>@item</td>
                                        }
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            }
            break;
        case "tables":
            {
                <div>
                    <h2>Tables</h2>
                    <ul>
                        @foreach (var table in Model.Config.GetTables())
                        {
                            <li><a href="?view=table&table=@table">@table</a>   | <a href="?view=config&table=@table">config</a></li>
                        }
                    </ul>
                </div>
            }
            break;
        default:
            {
                <div>Loading...</div>
            }
            break;
    }

</div>
